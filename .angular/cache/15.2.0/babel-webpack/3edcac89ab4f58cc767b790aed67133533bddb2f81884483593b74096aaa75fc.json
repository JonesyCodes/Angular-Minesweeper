{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GridSquaresComponent {\n  constructor() {\n    this.squareClickedEvent = new EventEmitter();\n    this.value = \"Mine?\";\n  }\n  ngOnInit() {\n    this.displayValue();\n  }\n  ngOnChanges(changes) {\n    this.displayValue();\n  }\n  displayValue() {\n    if (this.data.state == 'hidden') {\n      this.value = '?';\n    } else if (this.data.mine) {\n      this.value = 'Boom!';\n    } else {\n      this.value = this.data.adjacentMines == 0 ? ' ' : `${this.data.adjacentMines}`;\n    }\n  }\n  squareClicked() {\n    this.squareClickedEvent.emit();\n  }\n}\nGridSquaresComponent.ɵfac = function GridSquaresComponent_Factory(t) {\n  return new (t || GridSquaresComponent)();\n};\nGridSquaresComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GridSquaresComponent,\n  selectors: [[\"app-grid-squares\"]],\n  inputs: {\n    data: \"data\"\n  },\n  outputs: {\n    squareClickedEvent: \"squareClickedEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"click\"]],\n  template: function GridSquaresComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function GridSquaresComponent_Template_button_click_0_listener() {\n        return ctx.squareClicked();\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.value);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAuB,eAAe;;AAQrF,OAAM,MAAOC,oBAAoB;EALjCC;IASY,uBAAkB,GAAuB,IAAIF,YAAY,EAAE;IAErE,UAAK,GAAW,OAAO;;EAEvBG,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAC,WAAW,CAACC,OAAsB;IAChC,IAAI,CAACF,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,IAAI,CAACG,IAAI,CAACC,KAAK,IAAI,QAAQ,EAC/B;MACE,IAAI,CAACC,KAAK,GAAG,GAAG;KACjB,MACI,IAAI,IAAI,CAACF,IAAI,CAACG,IAAI,EACvB;MACE,IAAI,CAACD,KAAK,GAAG,OAAO;KACrB,MAED;MACE,IAAI,CAACA,KAAK,GAAG,IAAI,CAACF,IAAI,CAACI,aAAa,IAAI,CAAC,GAAE,GAAG,GAAE,GAAG,IAAI,CAACJ,IAAI,CAACI,aAAa,EAAE;;EAEhF;EAEAC,aAAa;IACX,IAAI,CAACC,kBAAkB,CAACC,IAAI,EAAE;EAChC;;AAjCWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAc;EAAAC;IAAAT;EAAA;EAAAU;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRjCC,iCAAkC;MAA1BA;QAAA,OAASC,mBAAe;MAAA,EAAC;MAACD,YAAS;MAAAA,iBAAS;;;MAAlBA,eAAS;MAATA,+BAAS","names":["EventEmitter","GridSquaresComponent","constructor","ngOnInit","displayValue","ngOnChanges","changes","data","state","value","mine","adjacentMines","squareClicked","squareClickedEvent","emit","selectors","inputs","outputs","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\grid-squares\\grid-squares.component.ts","C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\grid-squares\\grid-squares.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { SquareData } from '../square-data';\r\n\r\n@Component({\r\n  selector: 'app-grid-squares',\r\n  templateUrl: './grid-squares.component.html',\r\n  styleUrls: ['./grid-squares.component.css']\r\n})\r\nexport class GridSquaresComponent {\r\n\r\n  @Input() data!: SquareData;\r\n\r\n  @Output() squareClickedEvent: EventEmitter<void> = new EventEmitter();\r\n\r\n  value: string = \"Mine?\";\r\n\r\n  ngOnInit() {\r\n    this.displayValue();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.displayValue();\r\n  }\r\n\r\n  displayValue() {\r\n    if (this.data.state == 'hidden')\r\n    {\r\n      this.value = '?';\r\n    }\r\n    else if (this.data.mine)\r\n    {\r\n      this.value = 'Boom!';\r\n    }\r\n    else\r\n    {\r\n      this.value = this.data.adjacentMines == 0? ' ': `${this.data.adjacentMines}`;\r\n    }\r\n  }\r\n\r\n  squareClicked() {\r\n    this.squareClickedEvent.emit();\r\n  }\r\n}\r\n","<button (click)=\"squareClicked()\">{{value}}</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}