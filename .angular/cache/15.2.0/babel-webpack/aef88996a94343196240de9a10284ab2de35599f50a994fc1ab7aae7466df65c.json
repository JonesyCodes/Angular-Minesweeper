{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { GameStatusComponent } from '../game-status/game-status.component';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"placeholder\"];\nfunction OptionsComponent_ng_template_16_Template(rf, ctx) {}\nexport class OptionsComponent {\n  constructor(resolver, injector) {\n    this.resolver = resolver;\n    this.injector = injector;\n    this.title = 'Game Options';\n    this.mineCount = 3;\n    this.rowCount = 5;\n    this.columnCount = 5;\n  }\n  ngOnInit() {\n    this.newGameInstance();\n  }\n  //// Generate new minefield and clear game message\n  newGameInstance() {\n    this.placeholder.detach();\n    const componentFactory = this.resolver.resolveComponentFactory(GameStatusComponent);\n    const component = componentFactory.create(this.injector);\n    this.placeholder.insert(component.hostView);\n    component.instance.mineCount = this.mineCount;\n    component.instance.columnCount = 9 /*this.columnCount*/;\n    component.instance.rowCount = this.rowCount;\n  }\n  mineInputChange(event) {\n    this.mineCount = event.target.value;\n  }\n  rowInputChange(event) {\n    this.rowCount = event.target.value;\n  }\n  columnInputChange(event) {\n    this.columnCount = event.target.value;\n  }\n}\nOptionsComponent.ɵfac = function OptionsComponent_Factory(t) {\n  return new (t || OptionsComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.Injector));\n};\nOptionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OptionsComponent,\n  selectors: [[\"app-options\"]],\n  viewQuery: function OptionsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.placeholder = _t.first);\n    }\n  },\n  decls: 18,\n  vars: 4,\n  consts: [[\"for\", \"mineCount\"], [\"id\", \"mineCount\", \"type\", \"number\", \"required\", \"\", \"min\", \"0\", 3, \"value\", \"change\"], [\"mineAmount\", \"\"], [\"for\", \"columnCount\"], [\"id\", \"columnCount\", \"type\", \"number\", \"required\", \"\", \"min\", \"0\", 3, \"value\", \"change\"], [\"for\", \"rowCount\"], [\"id\", \"rowCount\", \"type\", \"number\", \"required\", \"\", \"min\", \"0\", 3, \"value\", \"change\"], [\"minAomount\", \"\"], [3, \"click\"], [\"id\", \"gameGrid\"], [\"placeholder\", \"\"]],\n  template: function OptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\", 0);\n      i0.ɵɵtext(3, \"Mines: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1, 2);\n      i0.ɵɵlistener(\"change\", function OptionsComponent_Template_input_change_4_listener($event) {\n        return ctx.mineInputChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Columns: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4, 2);\n      i0.ɵɵlistener(\"change\", function OptionsComponent_Template_input_change_8_listener($event) {\n        return ctx.columnInputChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Rows: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6, 7);\n      i0.ɵɵlistener(\"change\", function OptionsComponent_Template_input_change_12_listener($event) {\n        return ctx.rowInputChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function OptionsComponent_Template_button_click_14_listener() {\n        return ctx.newGameInstance();\n      });\n      i0.ɵɵtext(15, \"Apply\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, OptionsComponent_ng_template_16_Template, 0, 0, \"ng-template\", 9, 10, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.mineCount);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.columnCount);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.rowCount);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA+BA,gBAAgB,QAA4C,eAAe;AAC1G,SAASC,mBAAmB,QAAQ,sCAAsC;;;;AAO1E,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,QAAkC,EAAUC,QAAkB;IAA9D,aAAQ,GAARD,QAAQ;IAAoC,aAAQ,GAARC,QAAQ;IAPxE,UAAK,GAAG,cAAc;IACtB,cAAS,GAAW,CAAC;IACrB,aAAQ,GAAW,CAAC;IACpB,gBAAW,GAAW,CAAC;EAI+D;EAEtFC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEA;EACAA,eAAe;IACb,IAAI,CAACC,WAAW,CAACC,MAAM,EAAE;IACzB,MAAMC,gBAAgB,GAAG,IAAI,CAACN,QAAQ,CAACO,uBAAuB,CAACV,mBAAmB,CAAC;IACnF,MAAMW,SAAS,GAAGF,gBAAgB,CAACG,MAAM,CAAC,IAAI,CAACR,QAAQ,CAAC;IACxD,IAAI,CAACG,WAAW,CAACM,MAAM,CAACF,SAAS,CAACG,QAAQ,CAAC;IAE3CH,SAAS,CAACI,QAAQ,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS;IAE7CL,SAAS,CAACI,QAAQ,CAACE,WAAW,GAAG,CAAC,CAAC;IACnCN,SAAS,CAACI,QAAQ,CAACG,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAC7C;EAIAC,eAAe,CAACC,KAAsC;IACpD,IAAI,CAACJ,SAAS,GAAGI,KAAK,CAACC,MAAM,CAACC,KAAK;EACrC;EAEAC,cAAc,CAACH,KAAsC;IACnD,IAAI,CAACF,QAAQ,GAAGE,KAAK,CAACC,MAAM,CAACC,KAAK;EACpC;EAEAE,iBAAiB,CAACJ,KAAsC;IACtD,IAAI,CAACH,WAAW,GAAGG,KAAK,CAACC,MAAM,CAACC,KAAK;EACvC;;AAvCWrB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAwB;EAAAC;IAAA;6BAMO3B,gBAAgB;;;;;;;;;;;;MCdpD4B,0BAAI;MAAAA,YAAS;MAAAA,iBAAK;MAElBA,gCAAuB;MAAAA,uBAAO;MAAAA,iBAAQ;MACtCA,mCAAkI;MAA3CA;QAAA,OAAUC,2BAA6B;MAAA,EAAC;MAA/HD,iBAAkI;MAElIA,gCAAyB;MAAAA,yBAAS;MAAAA,iBAAQ;MAC1CA,mCAAwI;MAA7CA;QAAA,OAAUC,6BAA+B;MAAA,EAAC;MAArID,iBAAwI;MAExIA,iCAAsB;MAAAA,uBAAM;MAAAA,iBAAQ;MACpCA,oCAA+H;MAA1CA;QAAA,OAAUC,0BAA4B;MAAA,EAAC;MAA5HD,iBAA+H;MAE/HA,kCAAoC;MAA5BA;QAAA,OAASC,qBAAiB;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MAElDA,kHAAsD;;;MAblDA,eAAS;MAATA,+BAAS;MAG4CA,eAAqB;MAArBA,gDAAqB;MAGnBA,eAAuB;MAAvBA,kDAAuB;MAG1BA,eAAoB;MAApBA,+CAAoB","names":["ViewContainerRef","GameStatusComponent","OptionsComponent","constructor","resolver","injector","ngOnInit","newGameInstance","placeholder","detach","componentFactory","resolveComponentFactory","component","create","insert","hostView","instance","mineCount","columnCount","rowCount","mineInputChange","event","target","value","rowInputChange","columnInputChange","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\options\\options.component.ts","C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\options\\options.component.html"],"sourcesContent":["import { Component, ViewChild, ViewContainerRef, ComponentFactoryResolver, Injector } from '@angular/core';\nimport { GameStatusComponent } from '../game-status/game-status.component';\r\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.css']\n})\nexport class OptionsComponent {\n  title = 'Game Options'\n  mineCount: number = 3;\r\n  rowCount: number = 5;\r\n  columnCount: number = 5;\n\n  @ViewChild('placeholder', { read: ViewContainerRef, static: true })\r\n  public placeholder!: ViewContainerRef;\r\n  constructor(private resolver: ComponentFactoryResolver, private injector: Injector) { }\n\n  ngOnInit() {\r\n    this.newGameInstance();\r\n  }\r\n\r\n  //// Generate new minefield and clear game message\r\n  newGameInstance() {\r\n    this.placeholder.detach();\r\n    const componentFactory = this.resolver.resolveComponentFactory(GameStatusComponent);\r\n    const component = componentFactory.create(this.injector);\r\n    this.placeholder.insert(component.hostView);\r\n\r\n    component.instance.mineCount = this.mineCount;\r\n\r\n    component.instance.columnCount = 9 /*this.columnCount*/;\r\n    component.instance.rowCount = this.rowCount;\r\n  }\n\n\n\n  mineInputChange(event: { target: { value: number; }; }) {\r\n    this.mineCount = event.target.value;\r\n  }\r\n\r\n  rowInputChange(event: { target: { value: number; }; }) {\r\n    this.rowCount = event.target.value;\r\n  }\r\n\r\n  columnInputChange(event: { target: { value: number; }; }) {\r\n    this.columnCount = event.target.value;\r\n  }\n}\n","<h2>{{title}}</h2>\r\n\r\n<label for=\"mineCount\">Mines: </label>\r\n<input #mineAmount id=\"mineCount\" type=\"number\" required value=\"{{mineCount}}\" min=\"0\" (change)=\"mineInputChange($any($event))\" />\r\n\r\n<label for=\"columnCount\">Columns: </label>\r\n<input #mineAmount id=\"columnCount\" type=\"number\" required value=\"{{columnCount}}\" min=\"0\" (change)=\"columnInputChange($any($event))\" />\r\n\r\n<label for=\"rowCount\">Rows: </label>\r\n<input #minAomount id=\"rowCount\" type=\"number\" required value=\"{{rowCount}}\" min=\"0\" (change)=\"rowInputChange($any($event))\" />\r\n\r\n<button (click)=\"newGameInstance()\">Apply</button>\r\n\r\n<ng-template #placeholder id=\"gameGrid\"></ng-template>\r\n<!--<app-game-status></app-game-status>-->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}