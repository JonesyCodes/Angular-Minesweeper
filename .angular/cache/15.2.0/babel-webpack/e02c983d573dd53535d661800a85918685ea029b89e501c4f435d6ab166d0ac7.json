{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { GameStatusComponent } from '../game-status/game-status.component';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"placeholder\"];\nfunction OptionsComponent_ng_template_25_Template(rf, ctx) {}\nexport class OptionsComponent {\n  constructor(resolver, injector) {\n    this.resolver = resolver;\n    this.injector = injector;\n    this.title = 'Game Options';\n    this.mineCount = 3;\n    this.rowCount = 5;\n    this.columnCount = 5;\n  }\n  ngOnInit() {\n    this.newGameInstance();\n  }\n  //// Generate new minefield and clear game message\n  newGameInstance() {\n    this.placeholder.detach();\n    const componentFactory = this.resolver.resolveComponentFactory(GameStatusComponent);\n    const component = componentFactory.create(this.injector);\n    this.placeholder.insert(component.hostView);\n    component.instance.mineCount = this.mineCount;\n    component.instance.columnCount = this.columnCount; // breaks game logic if set from columnCount, unsure why\n    component.instance.rowCount = this.rowCount;\n  }\n  mineInputChange(event) {\n    if (event.target.value < 1) {\n      event.target.value = 1;\n    }\n    this.mineCount = Number(event.target.value);\n  }\n  rowInputChange(event) {\n    if (event.target.value < 1) {\n      event.target.value = 1;\n    }\n    this.rowCount = Number(event.target.value);\n  }\n  columnInputChange(event) {\n    if (event.target.value < 1) {\n      event.target.value = 1;\n    }\n    this.columnCount = Number(event.target.value);\n  }\n}\nOptionsComponent.ɵfac = function OptionsComponent_Factory(t) {\n  return new (t || OptionsComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.Injector));\n};\nOptionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OptionsComponent,\n  selectors: [[\"app-options\"]],\n  viewQuery: function OptionsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.placeholder = _t.first);\n    }\n  },\n  decls: 27,\n  vars: 4,\n  consts: [[\"id\", \"gameOptionsForm\"], [1, \"container\"], [1, \"row\"], [1, \"col-6\", \"col-md\"], [1, \"input-group\"], [1, \"input-group-text\"], [\"id\", \"mineCount\", \"type\", \"number\", \"required\", \"\", \"min\", \"1\", 1, \"form-control\", 3, \"value\", \"change\"], [\"mineAmount\", \"\"], [1, \"col-md\"], [\"id\", \"columnCount\", \"type\", \"number\", \"required\", \"\", \"min\", \"1\", 1, \"form-control\", 3, \"value\", \"change\"], [\"columnAmount\", \"\"], [\"id\", \"rowCount\", \"type\", \"number\", \"required\", \"\", \"min\", \"1\", 1, \"form-control\", 3, \"value\", \"change\"], [\"rowAmount\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"gameGrid\"], [\"placeholder\", \"\"]],\n  template: function OptionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"span\", 5);\n      i0.ɵɵtext(8, \"Mines\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"change\", function OptionsComponent_Template_input_change_9_listener($event) {\n        return ctx.mineInputChange($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 4)(13, \"span\", 5);\n      i0.ɵɵtext(14, \"Columns\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 9, 10);\n      i0.ɵɵlistener(\"change\", function OptionsComponent_Template_input_change_15_listener($event) {\n        return ctx.columnInputChange($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 8)(18, \"div\", 4)(19, \"span\", 5);\n      i0.ɵɵtext(20, \"Rows\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 11, 12);\n      i0.ɵɵlistener(\"change\", function OptionsComponent_Template_input_change_21_listener($event) {\n        return ctx.rowInputChange($event);\n      });\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(23, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function OptionsComponent_Template_button_click_23_listener() {\n        return ctx.newGameInstance();\n      });\n      i0.ɵɵtext(24, \"Apply\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, OptionsComponent_ng_template_25_Template, 0, 0, \"ng-template\", 14, 15, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(8);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.mineCount);\n      i0.ɵɵadvance(6);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.columnCount);\n      i0.ɵɵadvance(6);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.rowCount);\n    }\n  },\n  styles: [\"#gameOptionsForm[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{\\r\\n  width: 40%;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n#gameOptionsForm[_ngcontent-%COMP%]   col[_ngcontent-%COMP%]{\\r\\n  max-width: 50%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvb3B0aW9ucy9vcHRpb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIiNnYW1lT3B0aW9uc0Zvcm0gc3BhbntcclxuICB3aWR0aDogNDAlO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4jZ2FtZU9wdGlvbnNGb3JtIGNvbHtcclxuICBtYXgtd2lkdGg6IDUwJTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA+BA,gBAAgB,QAA4C,eAAe;AAC1G,SAASC,mBAAmB,QAAQ,sCAAsC;;;;AAO1E,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,QAAkC,EAAUC,QAAkB;IAA9D,aAAQ,GAARD,QAAQ;IAAoC,aAAQ,GAARC,QAAQ;IAPxE,UAAK,GAAG,cAAc;IACtB,cAAS,GAAW,CAAC;IACrB,aAAQ,GAAW,CAAC;IACpB,gBAAW,GAAW,CAAC;EAI+D;EAEtFC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEA;EACAA,eAAe;IACb,IAAI,CAACC,WAAW,CAACC,MAAM,EAAE;IACzB,MAAMC,gBAAgB,GAAG,IAAI,CAACN,QAAQ,CAACO,uBAAuB,CAACV,mBAAmB,CAAC;IACnF,MAAMW,SAAS,GAAGF,gBAAgB,CAACG,MAAM,CAAC,IAAI,CAACR,QAAQ,CAAC;IACxD,IAAI,CAACG,WAAW,CAACM,MAAM,CAACF,SAAS,CAACG,QAAQ,CAAC;IAE3CH,SAAS,CAACI,QAAQ,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS;IAC7CL,SAAS,CAACI,QAAQ,CAACE,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC,CAAC;IACnDN,SAAS,CAACI,QAAQ,CAACG,QAAQ,GAAG,IAAI,CAACA,QAAQ;EAC7C;EAEAC,eAAe,CAACC,KAAsC;IACpD,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC,EAAE;MAC1BF,KAAK,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC;;IAGxB,IAAI,CAACN,SAAS,GAAGO,MAAM,CAACH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7C;EAEAE,cAAc,CAACJ,KAAsC;IACnD,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC,EAAE;MAC1BF,KAAK,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC;;IAGxB,IAAI,CAACJ,QAAQ,GAAGK,MAAM,CAACH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5C;EAEAG,iBAAiB,CAACL,KAAsC;IACtD,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC,EAAE;MAC1BF,KAAK,CAACC,MAAM,CAACC,KAAK,GAAG,CAAC;;IAGxB,IAAI,CAACL,WAAW,GAAGM,MAAM,CAACH,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/C;;AAhDWrB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAyB;EAAAC;IAAA;6BAMO5B,gBAAgB;;;;;;;;;;;;MCdpD6B,0BAAI;MAAAA,YAAS;MAAAA,iBAAK;MAElBA,+BAA2B;MAMcA,qBAAK;MAAAA,iBAAO;MAC3CA,mCAAuJ;MAA3CA;QAAA,OAAUC,2BAA6B;MAAA,EAAC;MAApJD,iBAAuJ;MAG3JA,+BAAoB;MAEeA,wBAAO;MAAAA,iBAAO;MAC7CA,qCAA+J;MAA7CA;QAAA,OAAUC,6BAA+B;MAAA,EAAC;MAA5JD,iBAA+J;MAGnKA,+BAAoB;MAEeA,qBAAI;MAAAA,iBAAO;MAC1CA,sCAAmJ;MAA1CA;QAAA,OAAUC,0BAA4B;MAAA,EAAC;MAAhJD,iBAAmJ;MAQ7JA,mCAA4D;MAA5BA;QAAA,OAASC,qBAAiB;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MAE1EA,mHAAsD;;;MA/BlDA,eAAS;MAATA,+BAAS;MAS2EA,eAAqB;MAArBA,gDAAqB;MAMjBA,eAAuB;MAAvBA,kDAAuB;MAM7BA,eAAoB;MAApBA,+CAAoB","names":["ViewContainerRef","GameStatusComponent","OptionsComponent","constructor","resolver","injector","ngOnInit","newGameInstance","placeholder","detach","componentFactory","resolveComponentFactory","component","create","insert","hostView","instance","mineCount","columnCount","rowCount","mineInputChange","event","target","value","Number","rowInputChange","columnInputChange","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\options\\options.component.ts","C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\options\\options.component.html"],"sourcesContent":["import { Component, ViewChild, ViewContainerRef, ComponentFactoryResolver, Injector } from '@angular/core';\nimport { GameStatusComponent } from '../game-status/game-status.component';\r\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.css']\n})\nexport class OptionsComponent {\n  title = 'Game Options'\n  mineCount: number = 3;\r\n  rowCount: number = 5;\r\n  columnCount: number = 5;\n\n  @ViewChild('placeholder', { read: ViewContainerRef, static: true })\r\n  public placeholder!: ViewContainerRef;\r\n  constructor(private resolver: ComponentFactoryResolver, private injector: Injector) { }\n\n  ngOnInit() {\r\n    this.newGameInstance();\r\n  }\r\n\r\n  //// Generate new minefield and clear game message\r\n  newGameInstance() {\r\n    this.placeholder.detach();\r\n    const componentFactory = this.resolver.resolveComponentFactory(GameStatusComponent);\r\n    const component = componentFactory.create(this.injector);\r\n    this.placeholder.insert(component.hostView);\r\n\r\n    component.instance.mineCount = this.mineCount;\r\n    component.instance.columnCount = this.columnCount; // breaks game logic if set from columnCount, unsure why\r\n    component.instance.rowCount = this.rowCount;\r\n  }\n\n  mineInputChange(event: { target: { value: number; }; }) {\r\n    if (event.target.value < 1) {\r\n      event.target.value = 1;\r\n    }\r\n\r\n    this.mineCount = Number(event.target.value);\r\n  }\r\n\r\n  rowInputChange(event: { target: { value: number; }; }) {\r\n    if (event.target.value < 1) {\r\n      event.target.value = 1;\r\n    }\r\n\r\n    this.rowCount = Number(event.target.value);\r\n  }\r\n\r\n  columnInputChange(event: { target: { value: number; }; }) {\r\n    if (event.target.value < 1) {\r\n      event.target.value = 1;\r\n    }\r\n\r\n    this.columnCount = Number(event.target.value);\r\n  }\n}\n","<h2>{{title}}</h2>\r\n\r\n<form id=\"gameOptionsForm\">\r\n\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-6 col-md\">\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\">Mines</span>\r\n          <input #mineAmount class=\"form-control\" id=\"mineCount\" type=\"number\" required value=\"{{mineCount}}\" min=\"1\" (change)=\"mineInputChange($any($event))\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md\">\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\">Columns</span>\r\n          <input #columnAmount class=\"form-control\" id=\"columnCount\" type=\"number\" required value=\"{{columnCount}}\" min=\"1\" (change)=\"columnInputChange($any($event))\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md\">\r\n        <div class=\"input-group\">\r\n          <span class=\"input-group-text\">Rows</span>\r\n          <input #rowAmount class=\"form-control\" id=\"rowCount\" type=\"number\" required value=\"{{rowCount}}\" min=\"1\" (change)=\"rowInputChange($any($event))\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</form>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"newGameInstance()\">Apply</button>\r\n\r\n<ng-template #placeholder id=\"gameGrid\"></ng-template>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}