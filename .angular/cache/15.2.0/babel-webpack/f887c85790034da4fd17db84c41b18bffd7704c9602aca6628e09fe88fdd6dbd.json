{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GridSquaresComponent {\n  constructor() {\n    this.bomb = false;\n    this.coordinates = [0, 0];\n    this.sendCoordinatesEvent = new EventEmitter();\n    this.adjacentBombs = 0;\n    this.value = \"Bomb?\";\n  }\n  chooseSquare() {\n    if (this.bomb) {\n      this.value = \"Bomb!\";\n    } else {\n      this.value = `${this.adjacentBombs}`;\n      this.sendCoordinatesEvent(this.coordinates);\n    }\n  }\n}\nGridSquaresComponent.ɵfac = function GridSquaresComponent_Factory(t) {\n  return new (t || GridSquaresComponent)();\n};\nGridSquaresComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GridSquaresComponent,\n  selectors: [[\"app-grid-squares\"]],\n  inputs: {\n    bomb: \"bomb\",\n    coordinates: \"coordinates\"\n  },\n  outputs: {\n    sendCoordinatesEvent: \"sendCoordinatesEvent\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"click\"]],\n  template: function GridSquaresComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function GridSquaresComponent_Template_button_click_0_listener() {\n        return ctx.chooseSquare();\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.value);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;AAQtE,OAAM,MAAOC,oBAAoB;EALjCC;IAMW,SAAI,GAAY,KAAK;IACrB,gBAAW,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC;IACrC,yBAAoB,GAAG,IAAIF,YAAY,EAAY;IAC7D,kBAAa,GAAW,CAAC;IACzB,UAAK,GAAW,OAAO;;EAEvBG,YAAY;IACV,IAAI,IAAI,CAACC,IAAI,EAAE;MACb,IAAI,CAACC,KAAK,GAAG,OAAO;KACrB,MACI;MACH,IAAI,CAACA,KAAK,GAAG,GAAG,IAAI,CAACC,aAAa,EAAE;MACpC,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACC,WAAW,CAAC;;EAE/C;;AAfWP,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAQ;EAAAC;IAAAN;IAAAI;EAAA;EAAAG;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCRjCC,iCAAiC;MAAzBA;QAAA,OAASC,kBAAc;MAAA,EAAC;MAACD,YAAS;MAAAA,iBAAS;;;MAAlBA,eAAS;MAATA,+BAAS","names":["EventEmitter","GridSquaresComponent","constructor","chooseSquare","bomb","value","adjacentBombs","sendCoordinatesEvent","coordinates","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\grid-squares\\grid-squares.component.ts","C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\grid-squares\\grid-squares.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Function } from 'estree';\n\n@Component({\n  selector: 'app-grid-squares',\n  templateUrl: './grid-squares.component.html',\n  styleUrls: ['./grid-squares.component.css']\n})\nexport class GridSquaresComponent {\n  @Input() bomb: boolean = false;\n  @Input() coordinates: [number, number] = [0, 0];\n  @Output() sendCoordinatesEvent = new EventEmitter<number[]>();\n  adjacentBombs: number = 0;\n  value: string = \"Bomb?\";\n\n  chooseSquare() {\n    if (this.bomb) {\r\n      this.value = \"Bomb!\";\r\n    }\r\n    else {\r\n      this.value = `${this.adjacentBombs}`;\r\n      this.sendCoordinatesEvent(this.coordinates);\r\n    }\r\n  }\n}\n","<button (click)=\"chooseSquare()\">{{value}}</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}