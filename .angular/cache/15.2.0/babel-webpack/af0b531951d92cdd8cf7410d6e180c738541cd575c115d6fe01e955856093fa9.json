{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../game-grid/game-grid.component\";\nfunction GameStatusComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"app-game-grid\", 5);\n    i0.ɵɵlistener(\"gameOverEvent\", function GameStatusComponent_ng_template_11_Template_app_game_grid_gameOverEvent_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.gameOver($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mines\", 7);\n  }\n}\nexport class GameStatusComponent {\n  constructor() {\n    this.title = 'Status Bar';\n    this.mineSelection = 1;\n    this.renderGrid = true;\n  }\n  //@ViewChild(\"viewContainerRef\", { read: ViewContainerRef }) vcr!: ViewContainerRef;\n  //ref!: ComponentRef<GameGridComponent>\n  ngAfterViewInit() {\n    //this.addChild();\n  }\n  addGrid() {\n    this.renderGrid = true;\n  }\n  removeGrid() {\n    this.renderGrid = false;\n  }\n  resetGame() {\n    this.removeGrid();\n    this.addGrid();\n  }\n  gameOver(win) {\n    let element = document.getElementById('gameGrid');\n    if (win) {\n      let newElement = '<h2>Winner<h2>';\n      element.insertAdjacentHTML(\"beforebegin\", newElement);\n    } else {\n      let newElement = '<h2>Go watch The Hurt Locker<h2>';\n      element.insertAdjacentHTML(\"beforebegin\", newElement);\n    }\n  }\n}\nGameStatusComponent.ɵfac = function GameStatusComponent_Factory(t) {\n  return new (t || GameStatusComponent)();\n};\nGameStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameStatusComponent,\n  selectors: [[\"app-game-status\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[\"for\", \"mineAmount\"], [\"id\", \"mineAmount\", \"type\", \"number\"], [3, \"click\"], [3, \"ngIf\"], [\"id\", \"gameGrid\"], [3, \"mines\", \"gameOverEvent\"]],\n  template: function GameStatusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\", 0);\n      i0.ɵɵtext(3, \"Total mines: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 1);\n      i0.ɵɵelementStart(5, \"label\");\n      i0.ɵɵtext(6, \"Time Spent: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\");\n      i0.ɵɵtext(8, \"Give up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function GameStatusComponent_Template_button_click_9_listener() {\n        return ctx.resetGame();\n      });\n      i0.ɵɵtext(10, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, GameStatusComponent_ng_template_11_Template, 2, 1, \"ng-template\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.renderGrid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.GameGridComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IASEA,8BAAmB;IACUA;MAAAA;MAAA;MAAA,OAAiBA,sCAAgB;IAAA,EAAC;IAACA,iBAAgB;;;IAA/DA,eAAW;IAAXA,yBAAW;;;ACF9B,OAAM,MAAOC,mBAAmB;EALhCC;IAME,UAAK,GAAG,YAAY;IACpB,kBAAa,GAAW,CAAC;IACzB,eAAU,GAAY,IAAI;;EAE1B;EACA;EAEAC,eAAe;IACb;EAAA;EAGFC,OAAO;IACL,IAAI,CAACC,UAAU,GAAG,IAAI;EACxB;EAEAC,UAAU;IACR,IAAI,CAACD,UAAU,GAAG,KAAK;EACzB;EAEAE,SAAS;IACP,IAAI,CAACD,UAAU,EAAE;IACjB,IAAI,CAACF,OAAO,EAAE;EAChB;EAEAI,QAAQ,CAACC,GAAY;IACnB,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IAEjD,IAAIH,GAAG,EAAE;MACP,IAAII,UAAU,GAAG,gBAAgB;MACjCH,OAAQ,CAACI,kBAAkB,CAAC,aAAa,EAAED,UAAU,CAAC;KACvD,MACI;MACH,IAAIA,UAAU,GAAG,kCAAkC;MACnDH,OAAQ,CAACI,kBAAkB,CAAC,aAAa,EAAED,UAAU,CAAC;;EAE1D;;AApCWZ,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRhCnB,0BAAI;MAAAA,YAAS;MAAAA,iBAAK;MAElBA,gCAAwB;MAAAA,6BAAa;MAAAA,iBAAQ;MAC7CA,2BAAsC;MACtCA,6BAAO;MAAAA,4BAAY;MAAAA,iBAAQ;MAC3BA,8BAAQ;MAAAA,uBAAO;MAAAA,iBAAS;MACxBA,iCAA8B;MAAtBA;QAAA,OAASoB,eAAW;MAAA,EAAC;MAACpB,sBAAK;MAAAA,iBAAS;MAE5CA,sFAIc;;;MAZVA,eAAS;MAATA,+BAAS;MAQAA,gBAAmB;MAAnBA,qCAAmB","names":["i0","GameStatusComponent","constructor","ngAfterViewInit","addGrid","renderGrid","removeGrid","resetGame","gameOver","win","element","document","getElementById","newElement","insertAdjacentHTML","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\game-status\\game-status.component.html","C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\game-status\\game-status.component.ts"],"sourcesContent":["<h3>{{title}}</h3>\r\n\r\n<label for=\"mineAmount\">Total mines: </label>\r\n<input id=\"mineAmount\" type=\"number\"/>\r\n<label>Time Spent: </label>\r\n<button>Give up</button>\r\n<button (click)=\"resetGame()\">Reset</button>\r\n\r\n<ng-template [ngIf]=\"renderGrid\">\r\n  <div id=\"gameGrid\">\r\n    <app-game-grid [mines]=\"7\" (gameOverEvent)=\"gameOver($event)\"></app-game-grid>\r\n  </div>\r\n</ng-template>\r\n\r\n<!--<ng-template #viewContainerRef></ng-template>-->\r\n","import { Component, ViewContainerRef, ComponentRef, ViewChild, QueryList } from '@angular/core';\r\nimport { GameGridComponent } from '../game-grid/game-grid.component';\r\n\r\n@Component({\r\n  selector: 'app-game-status',\r\n  templateUrl: './game-status.component.html',\r\n  styleUrls: ['./game-status.component.css']\r\n})\r\nexport class GameStatusComponent {\r\n  title = 'Status Bar'\r\n  mineSelection: number = 1;\r\n  renderGrid: boolean = true;\r\n\r\n  //@ViewChild(\"viewContainerRef\", { read: ViewContainerRef }) vcr!: ViewContainerRef;\r\n  //ref!: ComponentRef<GameGridComponent>\r\n\r\n  ngAfterViewInit() {\r\n    //this.addChild();\r\n  }\r\n\r\n  addGrid() {\r\n    this.renderGrid = true;\r\n  }\r\n\r\n  removeGrid() {\r\n    this.renderGrid = false;\r\n  }\r\n\r\n  resetGame() {\r\n    this.removeGrid();\r\n    this.addGrid();\r\n  }\r\n\r\n  gameOver(win: boolean) {\r\n    let element = document.getElementById('gameGrid');\r\n\r\n    if (win) {      \r\n      let newElement = '<h2>Winner<h2>';\r\n      element!.insertAdjacentHTML(\"beforebegin\", newElement);\r\n    }\r\n    else {\r\n      let newElement = '<h2>Go watch The Hurt Locker<h2>';\r\n      element!.insertAdjacentHTML(\"beforebegin\", newElement);\r\n    }\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}