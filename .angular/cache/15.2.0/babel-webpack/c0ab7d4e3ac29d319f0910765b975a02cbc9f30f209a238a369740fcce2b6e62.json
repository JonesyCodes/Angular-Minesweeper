{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class GridSquaresComponent {\n  constructor() {\n    this.sendCoordinatesEvent = new EventEmitter();\n    this.adjacentBombs = 0;\n    this.value = \"Mine?\";\n  }\n  ngOnChanges() {\n    console.log(\"changed\");\n    this.value = this.data.state;\n  }\n  chooseSquare() {\n    this.sendCoordinatesEvent.emit();\n  }\n}\nGridSquaresComponent.ɵfac = function GridSquaresComponent_Factory(t) {\n  return new (t || GridSquaresComponent)();\n};\nGridSquaresComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GridSquaresComponent,\n  selectors: [[\"app-grid-squares\"]],\n  inputs: {\n    id: \"id\",\n    mine: \"mine\",\n    coordinates: \"coordinates\",\n    data: \"data\"\n  },\n  outputs: {\n    sendCoordinatesEvent: \"sendCoordinatesEvent\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"click\"]],\n  template: function GridSquaresComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function GridSquaresComponent_Template_button_click_0_listener() {\n        return ctx.chooseSquare();\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.value);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;AAQtE,OAAM,MAAOC,oBAAoB;EALjCC;IAWY,yBAAoB,GAAuB,IAAIF,YAAY,EAAE;IACvE,kBAAa,GAAW,CAAC;IACzB,UAAK,GAAW,OAAO;;EAEvBG,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,IAAI,CAACC,KAAK;EAC9B;EAEAC,YAAY;IACR,IAAI,CAACC,oBAAoB,CAACC,IAAI,EAAE;EACpC;;AAjBWV,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAW;EAAAC;IAAAC;IAAAC;IAAAC;IAAAT;EAAA;EAAAU;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRjCC,iCAAiC;MAAzBA;QAAA,OAASC,kBAAc;MAAA,EAAC;MAACD,YAAS;MAAAA,iBAAS;;;MAAlBA,eAAS;MAATA,+BAAS","names":["EventEmitter","GridSquaresComponent","constructor","ngOnChanges","console","log","value","data","state","chooseSquare","sendCoordinatesEvent","emit","selectors","inputs","id","mine","coordinates","outputs","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\grid-squares\\grid-squares.component.ts","C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\grid-squares\\grid-squares.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SquareData } from '../square-data';\r\n\r\n@Component({\r\n  selector: 'app-grid-squares',\r\n  templateUrl: './grid-squares.component.html',\r\n  styleUrls: ['./grid-squares.component.css']\r\n})\r\nexport class GridSquaresComponent {\r\n  @Input() id: number | undefined;\r\n  @Input() mine: boolean | undefined;\r\n  @Input() coordinates: [number, number] | undefined;\r\n  @Input() data!: SquareData;\r\n\r\n  @Output() sendCoordinatesEvent: EventEmitter<void> = new EventEmitter();\r\n  adjacentBombs: number = 0;\r\n  value: string = \"Mine?\";\r\n\r\n  ngOnChanges() {\r\n    console.log(\"changed\");\r\n    this.value = this.data.state;\r\n  }\r\n\r\n  chooseSquare() {\r\n      this.sendCoordinatesEvent.emit();\r\n  }\r\n}\r\n","<button (click)=\"chooseSquare()\">{{value}}</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}