{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { GameGridComponent } from '../game-grid/game-grid.component';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"placeholder\"];\nfunction GameStatusComponent_ng_template_12_Template(rf, ctx) {}\nexport class GameStatusComponent {\n  constructor(resolver) {\n    this.resolver = resolver;\n    this.title = 'Status Bar';\n    this.mineSelection = 1;\n    this.renderGrid = 1;\n  }\n  ngOnInit() {\n    this.newGame();\n  }\n  newGame() {\n    this.placeholder.clear();\n    const componentFactory = this.resolver.resolveComponentFactory(GameGridComponent);\n    const component = this.placeholder.createComponent(componentFactory);\n    component.instance.mines = this.mineSelection;\n    component.instance.gameOverEvent.subscribe(value => this.gameOver(value));\n  }\n  gameOver(win) {\n    let element = document.getElementById('gameMessage');\n    if (win) {\n      let newElement = '<h2>Winner<h2>';\n      element.innerHTML(newElement);\n    } else {\n      let newElement = '<h2>Go watch The Hurt Locker<h2>';\n      element.innerHTML(newElement);\n    }\n  }\n}\nGameStatusComponent.ɵfac = function GameStatusComponent_Factory(t) {\n  return new (t || GameStatusComponent)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver));\n};\nGameStatusComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameStatusComponent,\n  selectors: [[\"app-game-status\"]],\n  viewQuery: function GameStatusComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.placeholder = _t.first);\n    }\n  },\n  decls: 14,\n  vars: 1,\n  consts: [[\"for\", \"mineAmount\"], [\"id\", \"mineAmount\", \"type\", \"number\"], [3, \"click\"], [\"id\", \"gameMessage\"], [\"id\", \"gameGrid\"], [\"placeholder\", \"\"]],\n  template: function GameStatusComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\", 0);\n      i0.ɵɵtext(3, \"Total mines: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 1);\n      i0.ɵɵelementStart(5, \"label\");\n      i0.ɵɵtext(6, \"Time Spent: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\");\n      i0.ɵɵtext(8, \"Give up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function GameStatusComponent_Template_button_click_9_listener() {\n        return ctx.newGame();\n      });\n      i0.ɵɵtext(10, \"Reset\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"div\", 3);\n      i0.ɵɵtemplate(12, GameStatusComponent_ng_template_12_Template, 0, 0, \"ng-template\", 4, 5, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,gBAAgB,QAAsE,eAAe;AACzH,SAASC,iBAAiB,QAAQ,kCAAkC;;;;AAOpE,OAAM,MAAOC,mBAAmB;EAQ9BC,YAAoBC,QAAkC;IAAlC,aAAQ,GAARA,QAAQ;IAP5B,UAAK,GAAG,YAAY;IACpB,kBAAa,GAAW,CAAC;IACzB,eAAU,GAAW,CAAC;EAKmC;EAEzDC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAA,OAAO;IACL,IAAI,CAACC,WAAW,CAACC,KAAK,EAAE;IACxB,MAAMC,gBAAgB,GAAG,IAAI,CAACL,QAAQ,CAACM,uBAAuB,CAACT,iBAAiB,CAAC;IACjF,MAAMU,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACK,eAAe,CAACH,gBAAgB,CAAC;IACpEE,SAAS,CAACE,QAAQ,CAACC,KAAK,GAAG,IAAI,CAACC,aAAa;IAC7CJ,SAAS,CAACE,QAAQ,CAACG,aAAa,CAACC,SAAS,CAAEC,KAAK,IAAK,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,CAAC;EAC7E;EAEAC,QAAQ,CAACC,GAAY;IACnB,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAEpD,IAAIH,GAAG,EAAE;MACP,IAAII,UAAU,GAAG,gBAAgB;MACjCH,OAAO,CAACI,SAAS,CAACD,UAAU,CAAC;KAC9B,MACI;MACH,IAAIA,UAAU,GAAG,kCAAkC;MACnDH,OAAO,CAACI,SAAS,CAACD,UAAU,CAAC;;EAEjC;;AAjCWtB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAwB;EAAAC;IAAA;6BAKI3B,gBAAgB;;;;;;;;;;;;MCbpD4B,0BAAI;MAAAA,YAAS;MAAAA,iBAAK;MAElBA,gCAAwB;MAAAA,6BAAa;MAAAA,iBAAQ;MAC7CA,2BAAsC;MACtCA,6BAAO;MAAAA,4BAAY;MAAAA,iBAAQ;MAC3BA,8BAAQ;MAAAA,uBAAO;MAAAA,iBAAS;MACxBA,iCAA4B;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MAU1CA,0BAA4B;MAE5BA,oHAAsD;;;MAlBlDA,eAAS;MAATA,+BAAS","names":["ViewContainerRef","GameGridComponent","GameStatusComponent","constructor","resolver","ngOnInit","newGame","placeholder","clear","componentFactory","resolveComponentFactory","component","createComponent","instance","mines","mineSelection","gameOverEvent","subscribe","value","gameOver","win","element","document","getElementById","newElement","innerHTML","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\game-status\\game-status.component.ts","C:\\Users\\ReactTraining\\Workspaces\\P082 - Angular\\Minesweeper\\src\\app\\game-status\\game-status.component.html"],"sourcesContent":["import { Component, ViewContainerRef, ComponentRef, ViewChild, QueryList, ComponentFactoryResolver } from '@angular/core';\r\nimport { GameGridComponent } from '../game-grid/game-grid.component';\r\n\r\n@Component({\r\n  selector: 'app-game-status',\r\n  templateUrl: './game-status.component.html',\r\n  styleUrls: ['./game-status.component.css']\r\n})\r\nexport class GameStatusComponent {\r\n  title = 'Status Bar'\r\n  mineSelection: number = 1;\r\n  renderGrid: number = 1;\r\n\r\n  @ViewChild('placeholder', { read: ViewContainerRef, static: true })\r\n  public placeholder!: ViewContainerRef;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {}\r\n\r\n  ngOnInit() {\r\n    this.newGame();\r\n  }\r\n\r\n  newGame() {\r\n    this.placeholder.clear();\r\n    const componentFactory = this.resolver.resolveComponentFactory(GameGridComponent);\r\n    const component = this.placeholder.createComponent(componentFactory);\r\n    component.instance.mines = this.mineSelection;\r\n    component.instance.gameOverEvent.subscribe((value) => this.gameOver(value));\r\n  }\r\n\r\n  gameOver(win: boolean) {\r\n    let element = document.getElementById('gameMessage');\r\n\r\n    if (win) {      \r\n      let newElement = '<h2>Winner<h2>';\r\n      element.innerHTML(newElement);\r\n    }\r\n    else {\r\n      let newElement = '<h2>Go watch The Hurt Locker<h2>';\r\n      element.innerHTML(newElement);\r\n    }\r\n  }\r\n\r\n}\r\n","<h3>{{title}}</h3>\r\n\r\n<label for=\"mineAmount\">Total mines: </label>\r\n<input id=\"mineAmount\" type=\"number\"/>\r\n<label>Time Spent: </label>\r\n<button>Give up</button>\r\n<button (click)=\"newGame()\">Reset</button>\r\n\r\n<!--<ng-template [ngIf]=\"renderGrid > 0\">\r\n  <div id=\"gameGrid\">\r\n    <app-game-grid [mines]=\"7\" (gameOverEvent)=\"gameOver($event)\"></app-game-grid>\r\n  </div>\r\n</ng-template>-->\r\n\r\n<!--<ng-container *ngComponentOutlet=\"GameGridComponent;\"></ng-container>-->\r\n\r\n<div id=\"gameMessage\"></div>\r\n\r\n<ng-template #placeholder id=\"gameGrid\"></ng-template>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}